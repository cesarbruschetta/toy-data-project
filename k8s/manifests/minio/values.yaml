
replicas: 2
rootUser: root

consoleIngress:
  enabled: true
  ingressClassName: nginx
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
  hosts:
    - minio.k8s.our-cluster.ovh
  tls:
    - secretName: minio-tls
      hosts:
      - minio.k8s.our-cluster.ovh

persistence:
  volumeName: "minio-volume-data"
  size: 10Gi

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  requests:
    memory: 256Mi
    cpu: 1
  limits:
    memory: 512Mi
    cpu: 2

## List of users to be created after minio install
##
users:
  ## Username, password and policy to be assigned to the user
  ## Default policies are [readonly|readwrite|writeonly|consoleAdmin|diagnostics]
  - accessKey: service-user-ingestion-data
    policy: readwrite

## List of buckets to be created after minio install
##
buckets:
    # Name of the bucket
  - name: lake-transient-ingestion
    # Policy to be set on the
    # bucket [none|download|upload|public]
    policy: none
    # Purge if bucket exists already
    purge: false
    # set versioning for
    # bucket [true|false]
    versioning: false
    # set objectlocking for
    # bucket [true|false] NOTE: versioning is enabled by default if you use locking 
    objectlocking: false

service:
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/path: '/minio/v2/metrics/cluster'
    prometheus.io/port: '9000'
